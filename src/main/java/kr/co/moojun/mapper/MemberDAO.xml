<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.co.moojun.model.DAO.MemberDAO">
   <!-- 
   MEMBER(회원)
   아이디(PK)  ID(PK)    VARCHAR2(100) NOT NULL
   번호        NUM       NUMBER        NOT NULL
   이름        NAME      VARCHAR2(100) NOT NULL
   패스워드    PWD       VARCHAR2(200) NOT NULL
   생년월일    BIRTH     VARCHAR2(200) NOT NULL
   성별        SEX       VARCHAR2(100) NOT NULL
   전화번호    PHONE     VARCHAR2(100) NOT NULL
   이메일      EMAIL     VARCHAR2(200) NOT NULL
   벌점        PANALTY   VARCHAR2(100) NOT NULL
   가입날짜    JOINDATE  DATE          NOT NULL
   사용여부    ENABLED   VARCHAR2(50)  NOT NULL
   -->
   <!-- 회원가입 -->
   <insert id="insertMember" parameterType="kr.co.moojun.model.DTO.MemberDTO">
      INSERT INTO MEMBER 
       (
         ID                
       , NUM             
       , NAME           
       , PWD            
       , BIRTH          
       , SEX             
       , PHONE         
       , EMAIL          
       , PANALTY      
       , JOINDATE     
       , ENABLED      
       )
       VALUES
       (
         #{id}
       , member_seq.NEXTVAL
       , #{name}
       , #{pwd}
       , #{birth}
       , #{sex}
       , #{phone}
       , #{email}
       , '0'
       , sysdate
       , '1'
       )
   </insert>
   
   <!-- 회원 권한 테이블 insert -->
   <insert id="insertRoleAndMember">
   		INSERT INTO ROLEANDMEMBER
   		(ID , ROLE)
   		VALUES
   		(#{param1} , #{param2})
   </insert>
   
   <!-- 탈퇴 -->
   <delete id="deleteMember">
      DELETE 
        FROM MEMBER
       WHERE ID = #{id}
   </delete>
   
   <!-- 강퇴(관리자) -->
   <delete id="admindeleteMember" parameterType="Integer">
   		DELETE 
        FROM MEMBER 
       WHERE NUM    = #{num}
   </delete>
   
   <!-- 회원 정보 수정 -->
   <update id="updateMember">
      UPDATE MEMBER <!-- 회원테이블 -->
         SET PWD   = #{param1}    
           , PHONE = #{param2}
           , EMAIL = #{param3} 
       WHERE ID  = #{param5}  
         AND PWD = #{param4} 
   </update>
   
   <!-- 회원리스트 조회 -->
   <select id="getMemberList" parameterType="hashmap" resultType="kr.co.moojun.model.DTO.MemberDTO">
      SELECT 
             *
        FROM
          (
            SELECT 
                   F.*
                 , ROWNUM AS R 
              FROM
                ( 
                  SELECT 
                         * 
                    FROM MEMBER 
                   ORDER BY num DESC
                ) F
         )
      WHERE R >= #{start} 
        AND R &lt;= #{end}
   </select>
   
   <!-- 회원정보 보기 (디테일) -->
   <select id="getMemberDetail" resultType="kr.co.moojun.model.DTO.MemberDTO">
      SELECT 
             * 
        FROM MEMBER 
       WHERE ID = #{id} 
   </select>
   
   <!-- 회원정보 상세보기 (관리자 전용) -->
   <select id="admingetMemberDetail" parameterType="Integer" resultType="kr.co.moojun.model.DTO.MemberDTO">
      SELECT *
        FROM MEMBER
       WHERE NUM = #{num}
   </select>
   
   <!-- 이메일 중복체크 -->
   <select id="emailcheck" resultType="Integer">
      SELECT 
             COUNT(*) 
        FROM MEMBER 
       WHERE EMAIL = #{email} 
   </select>
   
   <!-- 아이디 찾기 -->
   <select id="searchIdByNameAndEmail" resultType="kr.co.moojun.model.DTO.MemberDTO">
   		SELECT *
   		FROM MEMBER
   		WHERE NAME = #{param1} AND EMAIL = #{param2}
   </select>
   
   <!-- 비밀번호 찾기 -->
   <select id="searchPwdByIdAndEmail" resultType="kr.co.moojun.model.DTO.MemberDTO">
   		SELECT *
   		FROM MEMBER
   		WHERE ID = #{param1} AND EMAIL = #{param2}
   </select>
   
   <!-- 회원현황 (전체 회원수) -->
   <select id="getMemberCount" resultType="Integer">
      SELECT 
             COUNT(*) 
        FROM MEMBER
   </select>
   
   <!-- 비밀번호 확인 -->
   <select id="checkMember" resultType="Integer">
      SELECT 
      		COUNT(*)
      FROM MEMBER
      WHERE ID = #{param1} 
      	AND PWD = #{param2}
   </select>
   
   <!-- 비밀번호 체크 -->
   <select id="getPassword" resultType="String">
      SELECT PWD
      FROM MEMBER
      WHERE ID = #{id}
   </select>
   
</mapper>